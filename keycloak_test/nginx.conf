#user  nobody;
worker_processes  1;

events {
    worker_connections  1024;
}

http {
    resolver 127.0.0.1;
    
    lua_shared_dict discovery 1m;
    lua_shared_dict jwks 1m;
    lua_shared_dict sessions 10m;

    sendfile        on;
    keepalive_timeout  65;

    access_log  /opt/homebrew/var/log/openresty/access.log;
    error_log  /opt/homebrew/var/log/openresty/error.log debug;

    server {
        listen 80 default_server;
        server_name localhost;
        set $session_cookie_samesite Lax;
        set $session_storage cookie;
        set $session_cookie_httponly on;
        set $session_cookie_persistent on;

        access_by_lua '
            ngx.log(ngx.ERR, "Starting OpenID Connect authentication")
            local opts = {
                redirect_uri = "http://127.0.0.1/redirect_uri",
                accept_none_alg = true,
                discovery = "http://127.0.0.1:8080/auth/realms/master/.well-known/openid-configuration",
                client_id = "<client_id>",
                client_secret = "<client_secret>",
                logout_path = "/logout",
                redirect_after_logout_uri = "http://127.0.0.1:8080/auth/realms/master/protocol/openid-connect/logout?redirect_uri=http://127.0.0.1",
                redirect_after_logout_with_id_token_hint = false,
                session_contents = {id_token=true},
                session_store = "cookie",
                ssl_verify="no",
            }
            ngx.log(ngx.ERR, "OpenID Connect options set")

            local res, err = require("resty.openidc").authenticate(opts)
            if err then
                ngx.log(ngx.ERR, "OpenID Connect authentication error: ", err)
                ngx.status = 403
                ngx.say(err)
                ngx.exit(ngx.HTTP_FORBIDDEN)
            end
            ngx.log(ngx.ERR, "OpenID Connect authentication successful")
        ';

        location / {
            proxy_pass https://wiki.ncsa.illinois.edu;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
